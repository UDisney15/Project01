"""
Django settings for project01 project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
#Зписывается полный путь к проекту:
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#Секретный ключ, лучше сгенерировать новый:
SECRET_KEY = 'django-insecure-@h$5a@vwkf@!rd*dvi(zg&_r1*j8y%n00*tw47zh919$hbdbuc'

# SECURITY WARNING: don't run with debug turned on in production!
#Отображает ошибки внутри проекта на самом сайте, при значении False отключает
#отображение. Отключенние при выгрузке на сервер, при включенном может считаться уязвимостью:
DEBUG = True

#Разрешенные хосты( домен):
ALLOWED_HOSTS = []


# Application definition
#Установленные дополнения:
INSTALLED_APPS = [
    'main',
    # панель администратора через веб-интерфейс:
    'django.contrib.admin',
    #Содержит компоненты, необходимые для аутентификации пользователей, такие как пользовательские модели,
    #формы и представления. Он также предоставляет методы для работы с различными методами аутентификации,
    #такими как логин/пароль, социальная аутентификация и т.д:
    'django.contrib.auth',
    #Предоставляет механизмы для работы с типами контента и связей между моделями.
    #Он также обеспечивает поддержку различных типов содержимого, таких как текст,
    #изображения, видео и т.д:
    'django.contrib.contenttypes',
    # содержит компоненты для управления сессиями пользователей в приложении, такие как хранилище сессий,
    # механизмы идентификации сессий и т.д:
    'django.contrib.sessions',
    #обеспечивает удобный механизм для передачи сообщений от одного представления к другому.
    #Это может быть полезно, например, при перенаправлении пользователя на другую страницу
    #после успешной операции:
    'django.contrib.messages',
    #предоставляет механизмы для обработки статических файлов, таких как CSS, JavaScript и изображения.
    # Он позволяет автоматически собирать и обслуживать статические файлы, что упрощает работу с ними в
    #приложении:
    'django.contrib.staticfiles',
    #Подгружает статические обьеты.
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project01.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project01.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR /'project01/static']


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
